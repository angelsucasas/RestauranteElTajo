/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Controlador.Controladora;
import Modelo.Categoria;
import Modelo.Comida;
import Modelo.Combo;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Scarlet
 */
public class RegistroCombo extends javax.swing.JFrame {
    Controladora micontrol;
    String[] nombres = {};
    int[] codigos = {};
    Combo combo_actual;
    
    List<String> nombre_combos;
    List<Integer> codigo_combos;
    List<String> categoria_combos;
    List<String> precio_combos;
    List<Integer> codigo_comidas;
    List<String> nombre_comidas;
    List<String> comidas_por_cada_combo;       
    
    int[] codigos_categoria = {};
    
    /**
     * Creates new form RegistroCombo
     */
    
    public RegistroCombo() {
        initComponents();
    }
    
    public void cargarCombo(){
        nombre_combos = micontrol.filtrarCombosPorNombre();
        codigo_combos = micontrol.getCombosPorCodigo();  
        categoria_combos = micontrol.filtrarCombosPorCategoria();
        precio_combos = micontrol.filtrarCombosPorPrecio();
        nombre_comidas = micontrol.filtrarComidasPorNombre();
        codigo_comidas = micontrol.getComidasPorCodigo();
        comidas_por_cada_combo = micontrol.getStringDeComidasPertenecientesACadaCombo();
        
        DefaultTableModel modelT = (DefaultTableModel) listadoDeCombos.getModel();                                                  
        
        codigos = new int[codigo_combos.size()];
        
        modelT.setRowCount(0);
        for (int iteradorCombos = 0; iteradorCombos < codigos.length; iteradorCombos++) {
            codigos[iteradorCombos] = codigo_combos.get(iteradorCombos);
            modelT.addRow(new Object[]{nombre_combos.get(iteradorCombos), comidas_por_cada_combo.get(iteradorCombos), categoria_combos.get(iteradorCombos), precio_combos.get(iteradorCombos)});
        }
               
        listaPlatoDisponibles.removeAllItems();
        listaPlatoDisponibles.setModel(new DefaultComboBoxModel<>(nombre_comidas.toArray(nombres)));
    }
    
    public void cargarCategorias(){
        List<String> nombre_categorias = micontrol.filtrarCategoriasPorNombre();
        List<Integer> codigo_categorias = micontrol.getCategoriasPorCodigo();
        
        codigos_categoria = new int[codigo_categorias.size()];
        for (int i = 0; i < codigos_categoria.length; i++) {
            codigos_categoria[i] = codigo_categorias.get(i);
        }
        nombres = nombre_categorias.toArray(nombres);
        
        listaCategorias.removeAllItems();
        listaCategorias.setModel(new DefaultComboBoxModel<>(nombre_categorias.toArray(nombres)));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        nombreComboCreado = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        precioDelCombo = new javax.swing.JTextField();
        listaPlatoAgregados = new javax.swing.JComboBox<>();
        AgregarPlato = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        listaPlatoDisponibles = new javax.swing.JComboBox<>();
        RemoverPlato1 = new javax.swing.JButton();
        listaCategorias = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listadoDeCombos = new javax.swing.JTable();
        guardarCombo = new javax.swing.JButton();
        modificarCombo = new javax.swing.JButton();
        eliminarCombo = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 0));
        jLabel2.setText("El Tajo");

        jButton3.setFont(new java.awt.Font("SimSun", 1, 14)); // NOI18N
        jButton3.setText("SALIR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3)
                    .addComponent(jLabel2))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel2)
                .addGap(166, 166, 166)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("CHEF");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(205, 205, 205)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 2, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Registro de Combo");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jLabel4.setText("Nombre del Combo:");

        jLabel5.setText("Platos disponibles:");

        jLabel6.setText("Categoria:");

        jLabel7.setText("Precio:");

        listaPlatoAgregados.setName(""); // NOI18N
        listaPlatoAgregados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaPlatoAgregadosActionPerformed(evt);
            }
        });

        AgregarPlato.setText("agregar plato");
        AgregarPlato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarPlatoActionPerformed(evt);
            }
        });

        jLabel8.setText("Platos agregados:");

        listaPlatoDisponibles.setName(""); // NOI18N
        listaPlatoDisponibles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaPlatoDisponiblesActionPerformed(evt);
            }
        });

        RemoverPlato1.setText("remover plato");
        RemoverPlato1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoverPlato1ActionPerformed(evt);
            }
        });

        listaCategorias.setName(""); // NOI18N
        listaCategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaCategoriasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(precioDelCombo)
                                .addComponent(listaPlatoDisponibles, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(listaPlatoAgregados, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(listaCategorias, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(45, 45, 45)
                        .addComponent(nombreComboCreado, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AgregarPlato)
                    .addComponent(RemoverPlato1))
                .addGap(102, 102, 102))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nombreComboCreado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(listaCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(precioDelCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(AgregarPlato)
                    .addComponent(listaPlatoDisponibles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(listaPlatoAgregados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RemoverPlato1))
                .addContainerGap(79, Short.MAX_VALUE))
        );

        listadoDeCombos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre Combo", "Plato(s)", "Categoria", "Precio"
            }
        ));
        listadoDeCombos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                listadoDeCombosFocusGained(evt);
            }
        });
        listadoDeCombos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listadoDeCombosMouseClicked(evt);
            }
        });
        listadoDeCombos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                listadoDeCombosKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(listadoDeCombos);

        guardarCombo.setFont(new java.awt.Font("SimSun", 1, 14)); // NOI18N
        guardarCombo.setText("GUARDAR COMBO");
        guardarCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarComboActionPerformed(evt);
            }
        });

        modificarCombo.setFont(new java.awt.Font("SimSun", 1, 14)); // NOI18N
        modificarCombo.setText("MODIFICAR COMBO");
        modificarCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarComboActionPerformed(evt);
            }
        });

        eliminarCombo.setFont(new java.awt.Font("SimSun", 1, 14)); // NOI18N
        eliminarCombo.setText("ELIMINAR COMBO");
        eliminarCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(guardarCombo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(modificarCombo)
                                .addGap(18, 18, 18)
                                .addComponent(eliminarCombo)))
                        .addGap(0, 77, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarCombo)
                    .addComponent(modificarCombo)
                    .addComponent(eliminarCombo))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void listaPlatoAgregadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaPlatoAgregadosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listaPlatoAgregadosActionPerformed

    private void guardarComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarComboActionPerformed
        // TODO add your handling code here:
        if(listaPlatoAgregados.getItemCount() != 0 && listaCategorias.getItemCount() != 0 && ( !precioDelCombo.getText().isBlank() ) && (!precioDelCombo.getText().isEmpty()) && !nombreComboCreado.getText().isBlank()){
            
            List<Comida> comidas = new ArrayList<>();
            
            for (int indexPlatosAAgregar = 0; indexPlatosAAgregar < listaPlatoAgregados.getItemCount() ; indexPlatosAAgregar++) {                
                int  codigo_comida_a_registrar = codigo_comidas.get(nombre_comidas.indexOf(listaPlatoAgregados.getItemAt(indexPlatosAAgregar)));
                comidas.add((Comida)micontrol.filtrarComidaPorCodigo( codigo_comida_a_registrar));
            }
            
            Categoria categoria_seleccionada_por_usuario = (Categoria)micontrol.filtrarCategoriaPorCodigo(micontrol.getCategorias(), codigos_categoria[listaCategorias.getSelectedIndex()]);
            micontrol.crearCombo(nombreComboCreado.getText(), Integer.parseInt(precioDelCombo.getText()), categoria_seleccionada_por_usuario, comidas);
            cargarCombo();
        }else{
            if(listaCategorias.getItemCount()== 0){ JOptionPane.showMessageDialog(rootPane, "debe registrar alguna categoria primero ");}            
            if(listaPlatoAgregados.getItemCount()== 0){ JOptionPane.showMessageDialog(rootPane, "debe registrar algun plato primero ");}
            if( precioDelCombo.getText().isBlank()) JOptionPane.showMessageDialog(rootPane, "debe ingresar el precio del combo ");
            if(nombreComboCreado.getText().isBlank())JOptionPane.showMessageDialog(rootPane, "debe ingresar un nombre para el combo ");
        }
    }//GEN-LAST:event_guardarComboActionPerformed

    private void modificarComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarComboActionPerformed
        // TODO add your handling code here:
        if(listaPlatoAgregados.getItemCount() != 0 && listadoDeCombos.getRowCount() != 0 & listaCategorias.getItemCount() != 0){
            
            List<Comida> comidas = new ArrayList<>();
            
            try{
                for (int indexPlatosAAgregar = 0; indexPlatosAAgregar < listaPlatoAgregados.getItemCount() ; indexPlatosAAgregar++) {                
                int  codigo_comida_a_registrar = codigo_comidas.get(nombre_comidas.indexOf(listaPlatoAgregados.getItemAt(indexPlatosAAgregar)));
                comidas.add((Comida)micontrol.filtrarComidaPorCodigo( codigo_comida_a_registrar));
                }

                Categoria categoria_seleccionada_por_usuario = (Categoria)micontrol.filtrarCategoriaPorCodigo(micontrol.getCategorias(), codigos_categoria[listaCategorias.getSelectedIndex()]);
                micontrol.modificarCombo(nombreComboCreado.getText(), Integer.parseInt(precioDelCombo.getText()), categoria_seleccionada_por_usuario, comidas , codigos[listadoDeCombos.getSelectedRow()] );
                cargarCombo();
            }catch(Exception e){
                //este catch es necesario ya que ocurre un error fuera del index si el usuario selecciona un elemento a modificar y luego realiza la creacion/eliminacion de algun elemento, antes de modificarlo
                //esto causa que el numero de elementos disminuya y pueda ocurrir un error fuera de indice. ej: si queriamos modificar el elemento 5, pero tras eliminar un elemento ahora hay 4, entonces al tratar de acceder al 5 todo explota                
                JOptionPane.showMessageDialog(rootPane, "error al modificar el combo, por favor repita los pasos e intente de nuevo, error:"+ e.getMessage());
            }
            
        }else{
            if(listadoDeCombos.getRowCount()== 0){ JOptionPane.showMessageDialog(rootPane, "debe seleccionar el combo que desea modificar ");}
            if(listaPlatoAgregados.getItemCount()== 0){ JOptionPane.showMessageDialog(rootPane, "debe registrar algun plato primero ");}            
        }
    }//GEN-LAST:event_modificarComboActionPerformed

    private void listaPlatoDisponiblesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaPlatoDisponiblesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listaPlatoDisponiblesActionPerformed

    private void AgregarPlatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarPlatoActionPerformed
        // TODO add your handling code here:
        if(listaPlatoDisponibles.getItemCount()!= 0){
            listaPlatoAgregados.addItem(listaPlatoDisponibles.getSelectedItem().toString());
            listaPlatoAgregados.setSelectedIndex(listaPlatoAgregados.getItemCount()-1);
        }        
    }//GEN-LAST:event_AgregarPlatoActionPerformed

    private void RemoverPlato1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoverPlato1ActionPerformed
        // TODO add your handling code here:
        if(listaPlatoAgregados.getItemCount()!= 0){
            listaPlatoAgregados.removeItemAt(listaPlatoAgregados.getSelectedIndex());
        } 
    }//GEN-LAST:event_RemoverPlato1ActionPerformed

    private void eliminarComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarComboActionPerformed
        // TODO add your handling code here:
        if( listadoDeCombos.getRowCount() != 0 &&  listadoDeCombos.getSelectedRow() != -1){                                    
            micontrol.eliminarCombo(codigos[listadoDeCombos.getSelectedRow()]);
            cargarCombo();
        }
    }//GEN-LAST:event_eliminarComboActionPerformed

    private void listaCategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaCategoriasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listaCategoriasActionPerformed

    private void listadoDeCombosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listadoDeCombosMouseClicked
        // TODO add your handling code here:
        if(listadoDeCombos.getSelectedRow()!=-1){
            listaPlatoAgregados.removeAllItems();
             
            nombreComboCreado.setText(nombre_combos.get(listadoDeCombos.getSelectedRow()));
            precioDelCombo.setText(precio_combos.get(listadoDeCombos.getSelectedRow())  );                  
            listaCategorias.setSelectedItem(categoria_combos.get(listadoDeCombos.getSelectedRow()));         
            Combo combo_a_actualizar =  (Combo)micontrol.filtrarComboPorCodigo(micontrol.getCombos(),codigos[listadoDeCombos.getSelectedRow()]); 
            List<Comida> comidas_de_este_combo = combo_a_actualizar.getComidas();
            for(Comida comida:comidas_de_este_combo){
                listaPlatoAgregados.addItem(comida.getNombre());
            }
        }
    }//GEN-LAST:event_listadoDeCombosMouseClicked

    private void listadoDeCombosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listadoDeCombosKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_listadoDeCombosKeyPressed

    private void listadoDeCombosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_listadoDeCombosFocusGained
        // TODO add your handling code here:        
    }//GEN-LAST:event_listadoDeCombosFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroCombo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroCombo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroCombo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroCombo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroCombo().setVisible(true);
            }
        });
    }
    
     public void setMicontrol(Controladora micontrol) {
        this.micontrol = micontrol;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarPlato;
    private javax.swing.JButton RemoverPlato1;
    private javax.swing.JButton eliminarCombo;
    private javax.swing.JButton guardarCombo;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> listaCategorias;
    private javax.swing.JComboBox<String> listaPlatoAgregados;
    private javax.swing.JComboBox<String> listaPlatoDisponibles;
    private javax.swing.JTable listadoDeCombos;
    private javax.swing.JButton modificarCombo;
    private javax.swing.JTextField nombreComboCreado;
    private javax.swing.JTextField precioDelCombo;
    // End of variables declaration//GEN-END:variables
}
